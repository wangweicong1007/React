{"version":3,"sources":["Todolist/Todoinput.js","Todolist/Todoing.js","Todolist/Todolist.js","App.js","index.js"],"names":["Todoinput","handleInput","e","keyCode","props","add","target","value","handleChange","setState","inputValue","bind","state","onChange","this","type","onKeyDown","Component","Todoing","todo","className","doing","map","item","idx","done","key","onClick","change","title","del","checked","readOnly","Todolist","addItem","data","da","localStorage","setItem","JSON","stringify","delItem","splice","changeItem","parse","getItem","forEach","App","ReactDOM","render","document","getElementById"],"mappings":"2SAEqBA,E,YACjB,aAAc,IAAD,8BACT,+CAQJC,YAAc,SAACC,GACM,KAAdA,EAAEC,UACD,EAAKC,MAAMC,IAAIH,EAAEI,OAAOC,OACxBL,EAAEI,OAAOC,MAAM,KAZV,EAebC,aAAa,SAACN,GACV,EAAKO,SAAS,CACVC,WAAWR,EAAEI,OAAOC,SAfxB,EAAKN,YAAY,EAAKA,YAAYU,KAAjB,gBAEjB,EAAKC,MAAM,CACPF,WAAW,IALN,E,sEAqBT,OACI,6BACI,2BAAOG,SAAUC,KAAKN,aAAcO,KAAK,OAAOC,UAAWF,KAAKb,mB,GAxBzCgB,aCElBC,E,iLACP,IAAD,OACAC,EAAML,KAAKV,MAAXe,KACL,OACI,6BACI,uBAAGC,UAAU,OAAb,2BAAwBN,KAAKV,MAAMiB,OACnC,4BAEIF,EAAKG,KAAI,SAACC,EAAMC,GACZ,IAAkB,IAAdD,EAAKE,KACL,OACI,wBAAIC,IAAKF,GACL,2BAAOT,KAAK,WAAWY,QAAS,kBAAI,EAAKvB,MAAMwB,OAAOJ,MAD1D,MACqED,EAAKM,MAD1E,MACmF,4BAAQF,QAAS,kBAAI,EAAKvB,MAAM0B,IAAIN,KAApC,qBAOnG,uBAAGJ,UAAU,OAAb,2BAAwBN,KAAKV,MAAMqB,MACnC,4BAEIN,EAAKG,KAAI,SAACC,EAAMC,GACZ,IAAkB,IAAdD,EAAKE,KACL,OACI,wBAAIC,IAAKF,GACL,2BAAOT,KAAK,WAAWY,QAAS,kBAAI,EAAKvB,MAAMwB,OAAOJ,IAAMO,SAAO,EAACC,UAAQ,IADhF,MACsFT,EAAKM,MAD3F,MACoG,4BAAQF,QAAS,kBAAI,EAAKvB,MAAM0B,IAAIN,KAApC,0B,GA1B/FP,aCChBgB,G,kBACjB,aAAc,IAAD,uBACT,+CAaJC,QAAU,SAACC,GACP,IAAIC,EAAG,CAAC,MAAQD,EAAK,MAAO,GAC5B,EAAK1B,SAAS,CACVU,KAAK,GAAD,mBAAK,EAAKP,MAAMO,MAAhB,CAAqBiB,MAC3B,WACEC,aAAaC,QAAQ,GAAGC,KAAKC,UAAU,EAAK5B,MAAMO,WAnB7C,EAuBbsB,QAAU,SAACjB,GACP,IAAIL,EAAI,YAAM,EAAKP,MAAMO,MACzBA,EAAKuB,OAAOlB,EAAI,GAChB,EAAKf,SAAS,CACVU,UA3BK,EA8BbwB,WAAa,SAACnB,GACV,IAAIL,EAAI,YAAM,EAAKP,MAAMO,MACzBA,EAAKK,GAAKC,MAAQN,EAAKK,GAAKC,KAC5B,EAAKhB,SAAS,CACVU,UA/BJ,IAAII,EAAOgB,KAAKK,MAAMP,aAAaQ,QAAQ,SAHlC,OAKL,EAAKjC,MADI,OAATW,EACa,CACTJ,KAAM,IAGG,CACTA,KAAMI,GAVL,E,sEAsCTc,aAAaC,QAAQ,OAAQC,KAAKC,UAAU1B,KAAKF,MAAMO,OACvD,IAAIE,EAAQ,EACRI,EAAO,EAWX,OARCX,KAAKF,MAAMO,KAAK2B,SAAQ,SAACvB,IACJ,IAAdA,EAAKE,KACLJ,IAEAI,OAKJ,6BACI,kBAAC,EAAD,CAAWpB,IAAKS,KAAKoB,UAErB,kBAAC,EAAD,CAASN,OAAQd,KAAK6B,WAAYb,IAAKhB,KAAK2B,QAAStB,KAAML,KAAKF,MAAMO,KAAME,MAAOA,EAAOI,KAAMA,S,GAxD1ER,cCCjB8B,G,uLAEjB,OACE,6BACE,uCACA,kBAAC,EAAD,W,GALyB9B,cCAjC+B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.91367ab1.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Todoinput extends Component {\r\n    constructor(){\r\n        super();\r\n        this.handleInput=this.handleInput.bind(this);\r\n         // 声明一个状态，把他的值被状态控制\r\n        this.state={\r\n            inputValue:\"\"\r\n        }\r\n        \r\n    }\r\n    handleInput = (e)=>{\r\n        if(e.keyCode === 13){//键值 回车13\r\n            this.props.add(e.target.value);//属性是一个函数\r\n            e.target.value='';\r\n        }\r\n    }\r\n    handleChange=(e)=>{\r\n        this.setState({\r\n            inputValue:e.target.value,//当前的值\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input onChange={this.handleChange} type=\"text\" onKeyDown={this.handleInput}></input>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport Todolist from './Todolist'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class Todoing extends Component {\r\n    render() {\r\n        var {todo}=this.props;\r\n        return (\r\n            <div>\r\n                <p className='Ing'>正在进行{this.props.doing}</p>\r\n                <ul>\r\n                {\r\n                    todo.map((item, idx) => {\r\n                        if (item.done === false) {\r\n                            return (\r\n                                <li key={idx}>\r\n                                    <input type=\"checkbox\" onClick={()=>this.props.change(idx)}/>---{item.title}---<button onClick={()=>this.props.del(idx)}>删除</button>\r\n                                </li>\r\n                            )\r\n                        }\r\n                    })\r\n                }\r\n                </ul>\r\n                <p className='Ing'>已经完成{this.props.done}</p>\r\n                <ul>\r\n                {\r\n                    todo.map((item, idx) => {\r\n                        if (item.done === true) {\r\n                            return (\r\n                                <li key={idx}>\r\n                                    <input type=\"checkbox\" onClick={()=>this.props.change(idx)} checked readOnly/>---{item.title}---<button onClick={()=>this.props.del(idx)}>删除</button>\r\n                                </li>\r\n                            )\r\n                        }\r\n                    })\r\n                } \r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n// Todoing.protoTypes={\r\n//     todo:PropTypes.array,\r\n//     del:PropTypes.func\r\n// }\r\n// Todoing.defaultProps={\r\n//     todo:[]\r\n// }\r\n","import React, { Component } from 'react'\r\nimport Todoinput from './Todoinput'\r\nimport Todoing from './Todoing'\r\nimport './todo.css'\r\n\r\nexport default class Todolist extends Component {\r\n    constructor(){\r\n        super();\r\n         // 获取 localStorage\r\n        let item = JSON.parse(localStorage.getItem('item'));\r\n        if (item === null) {\r\n            this.state = {\r\n                todo: []\r\n            }\r\n        }else {\r\n            this.state = {\r\n                todo: item\r\n            }\r\n        }\r\n    }\r\n    addItem = (data)=>{\r\n        let da={\"title\":data,\"done\":false}\r\n        this.setState({\r\n            todo:[...this.state.todo,da]\r\n        },()=>{\r\n            localStorage.setItem(\"\",JSON.stringify(this.state.todo));\r\n        })\r\n        // console.log(this.state.todo.length+1);\r\n    }\r\n    delItem = (idx)=>{\r\n        let todo =[...this.state.todo];\r\n        todo.splice(idx,1);\r\n        this.setState({\r\n            todo\r\n        })\r\n    }\r\n    changeItem = (idx)=>{\r\n        let todo =[...this.state.todo];\r\n        todo[idx].done = !todo[idx].done;\r\n        this.setState({\r\n            todo\r\n        })\r\n    }\r\n    render() {\r\n        localStorage.setItem('item', JSON.stringify(this.state.todo));\r\n        let doing = 0;\r\n        let done = 0;\r\n\r\n         // 获取正在进行和已完成的数量\r\n         this.state.todo.forEach((item) => {\r\n            if (item.done === false) {\r\n                doing++;\r\n            } else {\r\n                done++;\r\n            }\r\n        });\r\n        \r\n        return (\r\n            <div>\r\n                <Todoinput add={this.addItem} />\r\n                {/* <p className='Ing'>正在进行   {this.state.todo.length}</p> */}\r\n                <Todoing change={this.changeItem} del={this.delItem} todo={this.state.todo} doing={doing} done={done} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\n\nimport Todolist from './Todolist/Todolist';\n\nimport './App.css';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div>\n        <p>Todolist</p>\n        <Todolist/>\n      </div>\n    )\n  }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}